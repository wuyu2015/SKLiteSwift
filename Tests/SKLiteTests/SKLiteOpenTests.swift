import XCTest
import XCTestDelayPrinter
@testable import SKLite

final class SKLiteOpenTests: XCTestCase {
    
    func testOpenInMemory() throws {
        let conn = try SKLite.open(":memory:")
        try SKLite.close(conn)
    }
    
    func testOpenTempDb() throws {
        let conn = try SKLite.open("")
        try SKLite.close(conn)
    }
    
    func testOpenInDocumentDirectory() throws {
        let dbName = randomDbName()
        let conn = try SKLite.openInDocumentDirectory(dbName, flags: [.READWRITE, .CREATE])
        try SKLite.close(conn)
        try SKLite.removeInDocumentDirectory(dbName)
    }
    
    func testOpenInHomeDirectory() throws {
        let dbName = randomDbName()
        let conn = try SKLite.openInHomeDirectory(dbName, flags: [.READWRITE, .CREATE])
        try SKLite.close(conn)
        try SKLite.removeInHomeDirectory(dbName)
    }
    
    func testOpenInDownloadsDirectory() throws {
        let dbName = randomDbNameWithDirectory()
        let conn = try SKLite.openInDownloadsDirectory(dbName, flags: [.READWRITE, .CREATE])
        try SKLite.close(conn)
        try SKLite.removeInDownloadsDirectory(dbName)
    }
    
    func testOpenInDownloadsDirectoryWithoutCreate() throws {
        let dbName = randomDbNameWithDirectory()
        let fileURL = SKLite.downloadsDirectoryURL.appendingPathComponent(dbName)
        try SKLite.touchDirectory(file: fileURL)
        XCTAssertTrue(SKLite.fileManager.createFile(atPath: fileURL.path, contents: nil, attributes: nil))
        let conn = try SKLite.open(fileURL.path)
        try SKLite.close(conn)
        try SKLite.removeInDownloadsDirectory(dbName)
    }
}
